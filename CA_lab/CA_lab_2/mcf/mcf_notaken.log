root@iZwz9bj4ryzwisxega006tZ:/home/simple-scalar/benchmark/CINT2000/181.mcf/data/test/input# sim-bpred -bpred nottaken -max:inst 2000000000 ./mcf.ss ./inp.in
sim-bpred: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: sim-bpred -bpred nottaken -max:inst 2000000000 ./mcf.ss ./inp.in

sim: simulation started @ Fri Jul  3 09:22:01 2020, options follow:

sim-bpred: This simulator implements a branch predictor analyzer.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message
# -v                    false # verbose operation
# -d                    false # enable debug message
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst          2000000000 # maximum number of inst's to execute
-bpred               nottaken # branch predictor type {nottaken|taken|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.



sim: ** starting functional simulation w/ predictors **

MCF SPEC version 1.6.I
by  Andreas Loebel
Copyright (c) 1998,1999   ZIB Berlin
All Rights Reserved.

nodes                      : 646
active arcs                : 4727
simplex iterations         : 3487
flow value                 : 420008515
new implicit arcs          : 33663
active arcs                : 38390
simplex iterations         : 4865
flow value                 : 380006269
checksum                   : 113792
optimal

sim: ** simulation statistics **
sim_num_insn              277504665 # total number of instructions executed
sim_num_refs              100392784 # total number of loads and stores executed
sim_elapsed_time                 12 # total simulation time in seconds
sim_inst_rate          23125388.7500 # simulation speed (in insts/sec)
sim_num_branches           56703872 # total number of branches executed
sim_IPB                      4.8939 # instruction per branch
bpred_nottaken.lookups     56703872 # total number of bpred lookups
bpred_nottaken.updates     56703872 # total number of updates
bpred_nottaken.addr_hits     41303028 # total number of address-predicted hits
bpred_nottaken.dir_hits     41303028 # total number of direction-predicted hits (includes addr-hits)
bpred_nottaken.misses      15400844 # total number of misses
bpred_nottaken.jr_hits      5313258 # total number of address-predicted hits for JR's
bpred_nottaken.jr_seen      5313258 # total number of JR's seen
bpred_nottaken.jr_non_ras_hits.PP      5313258 # total number of address-predicted hits for non-RAS JR's
bpred_nottaken.jr_non_ras_seen.PP      5313258 # total number of non-RAS JR's seen
bpred_nottaken.bpred_addr_rate    0.7284 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_nottaken.bpred_dir_rate    0.7284 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_nottaken.bpred_jr_rate    1.0000 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_nottaken.bpred_jr_non_ras_rate.PP    1.0000 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_nottaken.retstack_pushes            0 # total number of address pushed onto ret-addr stack
bpred_nottaken.retstack_pops            0 # total number of address popped off of ret-addr stack
bpred_nottaken.used_ras.PP            0 # total number of RAS predictions used
bpred_nottaken.ras_hits.PP            0 # total number of RAS hits
bpred_nottaken.ras_rate.PP <error: divide by zero> # RAS prediction rate (i.e., RAS hits/used RAS)